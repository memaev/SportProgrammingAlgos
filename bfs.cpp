//алгоритм поиска в ширину (breadth-first search - BFS). вершины граафа посещаются в порядке возрастания расстояния от начальной вершины.
//Следовательно, с помощью поиска в ширину мы сможем вычислить расстояние от начальной вершины до всех остальных.
//Реализация поиска в ширину основана на очереди вершин. На каждом шаге обрабатывается следующий узел из очереди. В примере ниже предполагается, что граф
//представлен списками смежности

#include <bits/stdc++.h>
using namespace std;

int N; //кол-во вершин в графе(в коде нужно задать)
vector<vector<int>> a; //матрица смежности графа
queue<int> b; //очередь содержит вершины, подлажещие обработке в порядке возрастания расстояния. Новые вершины добавляются в конец очереди, а обрабатывается вершина
//, находящаяся в начале очереди.
vector<bool> visited(N, false); //в массиве visited хранится информация о том, какие вершины уже посещались
vector<int> distance(N); //в массиве distance хранятся расстояния от начальной вершины до всех остальных вершин графа
int x; //вершина, в которой начинаем поиск(в коде нужно задать)

//поиск, начинающийся в вершине x, реализуется след образом
int main (){
    visited[x]=true;
    distance[x]=0;
    b.push(x);
    while(!b.empty()){
        int s = b.front();
        b.pop();
        //обработать вершину s
        for (auto u:a[s]){
            if (visited[u]) continue;
            visited[u]=true;
            distance[u]=distance[s]+1;
            b.push(u);
        }
    }
    return 0;
}
